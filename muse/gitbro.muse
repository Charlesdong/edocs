** Note
this page is moved to http://gitbro.sourceforge.net/

So there won't be any update here
<contents>
** Design
I want single file\dir revisions to display in a gui windows
 - I do not want re-implemenet much of gitk or gui-gui
 - I just want to have my own function
   - I want single file versions just a click away.
   - if possible I also want a deleted file list with all the old versions for each file
   - all complement for my muse-git doc system

** related projects
search git in SF, then I got:
 - QGit viewer
 - http://viewgit.sourceforge.net/requirements
 -  gitview --gtk based
 -  ugit --in python
** implementation

 - a engine in C, try to use *git-core* api, but can start with *gitk* commands
 - a GUI in Qt
 - write glue in Python
 - write web interface in the future [The Art of Unix Programming]
 - have config file
 - transfer data between files with tmp file, or dbus?

** Phylosophy

 - Software Is a Many-Layered Thing
 - the smaller, the better
 - simpleness wins at last

** Tips
Download the git offical tar ball, then have a look at git.c to know how to implement the engine.

git log --follow auth_for_yum/

the gitk source file is more than 10.000 long, in a single file. Tcl is esay, but I hate a file so big.

luckly I mainly care about the sys command after *exec*, so I just need to search =exec=

*** one file diff
actually what I want to know is how to get the diff files 
<example>
external_diff_get_one_file
</example>

** get diff


Now I want to have the pactches for *out*
Then I only need =git log --follow out=
Do:
<example>
peter@cow:~/test-repo$ git diff ff39ed298a367cf971fc647beea6a6d4d8451ba3  2a165290ca21bf75c54c7558ddc51a478d9887b7 >out-1.patch
peter@cow:~/test-repo$ git diff 2a165290ca21bf75c54c7558ddc51a478d9887b7 bdaf3c85b000ee721f3f10022bd7af6c9105bde9>out-2.patch
peter@cow:~/test-repo$ ls
ff  out  out-1.patch  out-2.patch
peter@cow:~/test-repo$ vim out-1.patch 
peter@cow:~/test-repo$ vim out-2.patch 
peter@cow:~/test-repo$ ls
ff  out  out-1.patch  out-2.patch
peter@cow:~/test-repo$ 
</example>
Now the problem is in the patches we have the diffs for the folder *ff/* as well, but this does not matter
I can simplely remove then with *sed* or some python code.

Then I get all the patches for the file named *out*, that means I have all the revisions as well.
Note: we can use *diff -u* above to get a universaul diff
*** then same can be done to get the history of *ff/*
I want this because I may some times, get a small project(a subdir, *github:python/web/*), out of a big one(like my *github:python/*)


** gitbro-egg
I suddenly want this
<example>
$cd edocs/
$gitbro-egg yum.muse
$cd ..
$cd yum.repo #now we get a small repo for the file yum.muse only
$gitk
</example>

I also want this for dirs, then I can clear see the changes I made to a single file
or a dir. I do not need to have my own gui tool

 - it will be a gitbro front-end
 - it just read and process *output-gitbro/*


if I can use this, then I can have  a very **perfect egg gitrepo**
<example>
git-commit(1)
--reuse-message=<commit> 
Take an existing commit object, and reuse the log message and the authorship information (including the timestamp) when creating the commit. 
</example>
but maybe this means I need to work with in the big repo, maybe I can creat a branch?


if a perfect one is difficult, then I just let the **Author** and **Date** be, I just commit with the original message
that is enough to fully understand the code.
