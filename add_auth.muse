son of YumHacking

now if I run
<example>
/usr/share/axtu-authen-client/bin/axtu-authen-client-cui
</example>

I get this:
<example>
  -t, --tk-path=STRING            follow with file path for temporary-key
  -a, --address-path=STRING       follow with file path for repository
                                  addresses
  -i, --id=STRING                 follow with Your member Id
  -p, --password=STRING           follow with Your password for member ID
  -n, --product-number=STRING     follow with your product number
  -s, --system-name=STRING        follow with your system name
  -d, --disable-collect-info      You may not allow sending the system
</example>

so the command line program has no UI, I need to add one for yum auth

** d
I can call authen-client in yum plugin init_hook()

so when authen-client obtain or update aktk

I can add some other code to modify the baseurl that yum use(to add id and passwd into the url)

then auth is done.haha

<example>
[root@dhcp17 ~]# /usr/share/axtu-authen-client/bin/axtu-authen-client-cui -i user3 -p abc123 -n 203K4-40Q00-0000N-383LN-MGN2Q
[Authentication Error] Don't match your Authentication Key.
[root@dhcp17 ~]#
</example>

so I use gui and obtain a right ak, now:

<example>
[root@dhcp17 ~]# /usr/share/axtu-authen-client/bin/axtu-authen-client-cui -i user3 -p abc123 -n 203K4-40Q00-0000N-383LN-MGN2Q
AK is Already existed
[root@dhcp17 ~]#
</example>


luckily I can
<example>
[root@dhcp17 ~]# /usr/share/axtu-authen-client/bin/axtu-authen-client-cui -r
Your authentication key file is removed
[root@dhcp17 ~]#
</example>
now it is OK:
<example>
[root@dhcp17 ~]# /usr/share/axtu-authen-client/bin/axtu-authen-client-cui -i user3 -p abc123 -n 203T5-44QG2-0000N-383LN-MGN2Q
Successfully the authentication key is created.
[root@dhcp17 ~]# axtu
</example>
authentification done perfectly, just like gui is in use

one small nice tip here:
<example>
[root@dhcp17 ~]# /usr/share/axtu-authen-client/bin/axtu-authen-client-cui -r
Your authentication key file is removed
[root@dhcp17 ~]# /usr/share/axtu-authen-client/bin/axtu-authen-client-cui -r
Your authentication key file is removed
[root@dhcp17 ~]# /usr/share/axtu-authen-client/bin/axtu-authen-client-cui -r
Your authentication key file is removed
</example>
the above means, I do not write in my plugin if ak is there, then '-r', I can just run '-r'

even there is no ak on system. and if there is a wrong ak, it is obvious that we should use '-r'

and the little not-so-nice thing is that what if there is a right ak on system?

so maybe I shall still detect if ak is there or not then the logic is much clearer.
